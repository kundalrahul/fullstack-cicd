apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app-deployment
  #namespace: backend
  labels:
    app: flask-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
        - name: cloud-sql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.19.1
          command:
            [
              "/cloud_sql_proxy",
              "-instances=optimum-task-429215-h2:us-central1:postgres-instance=tcp:5432",
              "-credential_file=/secrets/credentials.json",
            ]
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets
              readOnly: true

        - name: flask-app-container
          image: gcr.io/optimum-task-429215-h2/backend:latest
          ports:
            - containerPort: 5000
          env:
            - name: DB_HOST
              value: "34.123.154.45"
            - name: DB_USER
              value: "root"
            - name: DB_PASSWORD
              value: "root"
            - name: DB_NAME
              value: "ica4"
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
---
apiVersion: v1
kind: Service
metadata:
  name: flask-app-service
  # namespace: backend
spec:
  type: LoadBalancer
  selector:
    app: flask-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
